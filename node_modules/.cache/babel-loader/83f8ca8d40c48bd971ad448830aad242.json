{"ast":null,"code":"var _jsxFileName = \"/home/aram/Programming/streams/client/src/components/streams/StreamForm.js\";\nimport React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nclass StreamForm extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onSubmit = formValues => {\n      this.props.onSubmit(formValues);\n    };\n  }\n\n  renderInput(_ref) {\n    let {\n      input,\n      label,\n      meta\n    } = _ref;\n    const isError = meta.touched && meta.error;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `field ${isError ? \"error\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), isError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui error message\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: meta.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    console.log(this.props.streams);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.props.handleSubmit(this.onSubmit),\n        className: \"ui form error\",\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          label: \"Enter title\",\n          name: \"title\",\n          component: this.renderInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          label: \"Enter description\",\n          name: \"description\",\n          component: this.renderInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ui button primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst validate = formValues => {\n  const errors = {};\n\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"streamForm\",\n  validate\n})(StreamForm);","map":{"version":3,"sources":["/home/aram/Programming/streams/client/src/components/streams/StreamForm.js"],"names":["React","Component","Field","reduxForm","toast","configure","StreamForm","onSubmit","formValues","props","renderInput","input","label","meta","isError","touched","error","render","console","log","streams","handleSubmit","validate","errors","title","description","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,uCAAP;;;AACAA,KAAK,CAACC,SAAN;;AACA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAiBjCM,QAjBiC,GAiBrBC,UAAD,IAAgB;AACzB,WAAKC,KAAL,CAAWF,QAAX,CAAoBC,UAApB;AACD,KAnBgC;AAAA;;AAEjCE,EAAAA,WAAW,OAAyB;AAAA,QAAxB;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA;AAAhB,KAAwB;AAClC,UAAMC,OAAO,GAAGD,IAAI,CAACE,OAAL,IAAgBF,IAAI,CAACG,KAArC;AACA,wBACE;AAAK,MAAA,SAAS,EAAG,SAAQF,OAAO,GAAG,OAAH,GAAa,EAAG,EAAhD;AAAA,8BACE;AAAA,kBAAQF;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,sBAAWD;AAAX;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGG,OAAO,iBACN;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,oBAAyBD,IAAI,CAACG;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAKDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,KAAL,CAAWW,OAAvB;AACA,wBACE;AAAA,6BACE;AACE,QAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWY,YAAX,CAAwB,KAAKd,QAA7B,CADZ;AAEE,QAAA,SAAS,EAAC,eAFZ;AAAA,gCAIE,QAAC,KAAD;AACE,UAAA,KAAK,EAAC,aADR;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,SAAS,EAAE,KAAKG;AAHlB;AAAA;AAAA;AAAA;AAAA,gBAJF,eASE,QAAC,KAAD;AACE,UAAA,KAAK,EAAC,mBADR;AAEE,UAAA,IAAI,EAAC,aAFP;AAGE,UAAA,SAAS,EAAE,KAAKA;AAHlB;AAAA;AAAA;AAAA;AAAA,gBATF,eAcE;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,qBADF;AAoBD;;AA1CgC;;AA6CnC,MAAMY,QAAQ,GAAId,UAAD,IAAgB;AAC/B,QAAMe,MAAM,GAAG,EAAf;;AACA,MAAI,CAACf,UAAU,CAACgB,KAAhB,EAAuB;AACrBD,IAAAA,MAAM,CAACC,KAAP,GAAe,wBAAf;AACD;;AACD,MAAI,CAAChB,UAAU,CAACiB,WAAhB,EAA6B;AAC3BF,IAAAA,MAAM,CAACE,WAAP,GAAqB,8BAArB;AACD;;AAED,SAAOF,MAAP;AACD,CAVD;;AAYA,eAAepB,SAAS,CAAC;AACvBuB,EAAAA,IAAI,EAAE,YADiB;AAEvBJ,EAAAA;AAFuB,CAAD,CAAT,CAGZhB,UAHY,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\nclass StreamForm extends Component {\n  \n  renderInput({ input, label, meta }) {\n    const isError = meta.touched && meta.error;\n    return (\n      <div className={`field ${isError ? \"error\" : \"\"}`}>\n        <label>{label}</label>\n        <input {...input} />\n        {isError && (\n          <div className=\"ui error message\">\n            <div className=\"header\">{meta.error}</div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  onSubmit = (formValues) => {\n    this.props.onSubmit(formValues);\n  };\n  render() {\n    console.log(this.props.streams);\n    return (\n      <>\n        <form\n          onSubmit={this.props.handleSubmit(this.onSubmit)}\n          className=\"ui form error\"\n        >\n          <Field\n            label=\"Enter title\"\n            name=\"title\"\n            component={this.renderInput}\n          />\n          <Field\n            label=\"Enter description\"\n            name=\"description\"\n            component={this.renderInput}\n          />\n          <button className=\"ui button primary\">Submit</button>\n        </form>\n      </>\n    );\n  }\n}\n\nconst validate = (formValues) => {\n  const errors = {};\n  if (!formValues.title) {\n    errors.title = \"You must enter a title\";\n  }\n  if (!formValues.description) {\n    errors.description = \"You must enter a description\";\n  }\n\n  return errors;\n};\n\nexport default reduxForm({\n  form: \"streamForm\",\n  validate,\n})(StreamForm);\n"]},"metadata":{},"sourceType":"module"}