{"ast":null,"code":"var _jsxFileName = \"/home/aram/Programming/streams/client/src/components/streams/StreamShow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getStream } from \"../../store/operations\";\nimport flv from \"flv.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StreamShow() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const stream = useSelector(state => state.streams[id]);\n  const dispatch = useDispatch();\n  const videoRef = useRef();\n  useEffect(() => {\n    dispatch(getStream(id));\n    showPlayer();\n  }, []);\n\n  const showPlayer = () => {\n    if (flvPlayer || !stream) {\n      return;\n    }\n\n    let flvPlayer = flv.createPlayer({\n      type: \"flv\",\n      url: `http://localhost:8000/live/${id}`\n    });\n    flvPlayer.attachMediaElement(videoRef.current);\n    flvPlayer.load();\n    flvPlayer.play();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: stream ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        controls: true,\n        style: {\n          width: \"100%\"\n        },\n        ref: videoRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: stream.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: stream.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StreamShow, \"6J9a3E3tqrbsiES/QmsFOZx0hRA=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = StreamShow;\nexport default StreamShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamShow\");","map":{"version":3,"sources":["/home/aram/Programming/streams/client/src/components/streams/StreamShow.js"],"names":["React","useEffect","useRef","useDispatch","useSelector","useParams","getStream","flv","StreamShow","id","stream","state","streams","dispatch","videoRef","showPlayer","flvPlayer","createPlayer","type","url","attachMediaElement","current","load","play","width","title","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,GAAP,MAAgB,QAAhB;;;AACA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAMK,MAAM,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcH,EAAd,CAAZ,CAA1B;AACA,QAAMI,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,QAAQ,GAAGZ,MAAM,EAAvB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACP,SAAS,CAACG,EAAD,CAAV,CAAR;AACAM,IAAAA,UAAU;AACX,GAHQ,EAGN,EAHM,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAM;AACvB,QAAIC,SAAS,IAAI,CAACN,MAAlB,EAA0B;AACxB;AACD;;AACD,QAAIM,SAAS,GAAGT,GAAG,CAACU,YAAJ,CAAiB;AAC/BC,MAAAA,IAAI,EAAE,KADyB;AAE/BC,MAAAA,GAAG,EAAG,8BAA6BV,EAAG;AAFP,KAAjB,CAAhB;AAIAO,IAAAA,SAAS,CAACI,kBAAV,CAA6BN,QAAQ,CAACO,OAAtC;AACAL,IAAAA,SAAS,CAACM,IAAV;AACAN,IAAAA,SAAS,CAACO,IAAV;AACD,GAXD;;AAYA,sBACE;AAAA,cACGb,MAAM,gBACL;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,8BACE;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,KAAK,EAAE;AACLc,UAAAA,KAAK,EAAE;AADF,SAFT;AAKE,QAAA,GAAG,EAAEV;AALP;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,kBAAKJ,MAAM,CAACe;AAAZ;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA,kBAAKf,MAAM,CAACgB;AAAZ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAaL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAdJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAxCQlB,U;UACQH,S,EACAD,W,EACED,W;;;KAHVK,U;AA0CT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getStream } from \"../../store/operations\";\nimport flv from \"flv.js\";\nfunction StreamShow() {\n  const { id } = useParams();\n  const stream = useSelector((state) => state.streams[id]);\n  const dispatch = useDispatch();\n  const videoRef = useRef();\n  useEffect(() => {\n    dispatch(getStream(id));\n    showPlayer();\n  }, []);\n  const showPlayer = () => {\n    if (flvPlayer || !stream) {\n      return;\n    }\n    let flvPlayer = flv.createPlayer({\n      type: \"flv\",\n      url: `http://localhost:8000/live/${id}`,\n    });\n    flvPlayer.attachMediaElement(videoRef.current);\n    flvPlayer.load();\n    flvPlayer.play();\n  };\n  return (\n    <div>\n      {stream ? (\n        <div className=\"\">\n          <video\n            controls\n            style={{\n              width: \"100%\",\n            }}\n            ref={videoRef}\n          />\n          <h1>{stream.title}</h1>\n          <h4>{stream.description}</h4>\n        </div>\n      ) : (\n        <div>Loading....</div>\n      )}\n    </div>\n  );\n}\n\nexport default StreamShow;\n"]},"metadata":{},"sourceType":"module"}