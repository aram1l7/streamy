{"ast":null,"code":"var _jsxFileName = \"/home/aram/Programming/streams/client/src/components/streams/StreamShow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getStream } from \"../../store/operations\";\nimport flv from \"flv.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StreamShow() {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const stream = useSelector(state => state.streams[id]);\n  const dispatch = useDispatch();\n  const videoRef = useRef();\n  useEffect(() => {\n    dispatch(getStream(id));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [stream ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: stream.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: stream.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), \"StreamShow\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StreamShow, \"6J9a3E3tqrbsiES/QmsFOZx0hRA=\", false, function () {\n  return [useParams, useSelector, useDispatch];\n});\n\n_c = StreamShow;\nexport default StreamShow;\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamShow\");","map":{"version":3,"sources":["/home/aram/Programming/streams/client/src/components/streams/StreamShow.js"],"names":["React","useEffect","useRef","useDispatch","useSelector","useParams","getStream","flv","StreamShow","id","stream","state","streams","dispatch","videoRef","title","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAOC,GAAP,MAAgB,QAAhB;;;AACA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAASJ,SAAS,EAAxB;AACA,QAAMK,MAAM,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcH,EAAd,CAAZ,CAA1B;AACA,QAAMI,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAMW,QAAQ,GAAGZ,MAAM,EAAvB;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CAACP,SAAS,CAACG,EAAD,CAAV,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,eACGC,MAAM,gBACL;AAAK,MAAA,SAAS,EAAC,EAAf;AAAA,8BACE;AAAO,QAAA,GAAG,EAAEI;AAAZ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKJ,MAAM,CAACK;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAKL,MAAM,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,gBAOL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAtBQR,U;UACQH,S,EACAD,W,EACED,W;;;KAHVK,U;AAwBT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getStream } from \"../../store/operations\";\nimport flv from \"flv.js\";\nfunction StreamShow() {\n  const { id } = useParams();\n  const stream = useSelector((state) => state.streams[id]);\n  const dispatch = useDispatch();\n  const videoRef = useRef();\n  useEffect(() => {\n    dispatch(getStream(id));\n  }, []);\n  return (\n    <div>\n      {stream ? (\n        <div className=\"\">\n          <video ref={videoRef} />\n          <h1>{stream.title}</h1>\n          <h4>{stream.description}</h4>\n        </div>\n      ) : (\n        <div>Loading....</div>\n      )}\n      StreamShow\n    </div>\n  );\n}\n\nexport default StreamShow;\n"]},"metadata":{},"sourceType":"module"}