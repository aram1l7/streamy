{"ast":null,"code":"var _jsxFileName = \"/home/aram/Programming/streams/client/src/components/streams/StreamList.js\";\nimport React, { Component } from \"react\";\nimport { getStreamList } from \"../../store/operations\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends Component {\n  componentDidMount() {\n    this.props.getStreams();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: this.props.streams.map(el => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            children: [el.userId === this.props.currentUserId && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"right floated content\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/streams/edit/${el.id}`,\n                className: \"ui button primary\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: `/streams/delete/${el.id}`,\n                className: \"ui button negative\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"large middle aligned icon camera\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: `/streams/${el.id}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, this), el.title, /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"description\",\n                children: el.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)]\n          }, el.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), this.props.isSignedIn && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"right\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/streams/new\",\n            className: \"ui button primary\",\n            children: \"Create new\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getStreams: () => dispatch(getStreamList())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamList);","map":{"version":3,"sources":["/home/aram/Programming/streams/client/src/components/streams/StreamList.js"],"names":["React","Component","getStreamList","Link","connect","StreamList","componentDidMount","props","getStreams","render","streams","map","el","userId","currentUserId","id","title","description","isSignedIn","textAlign","mapStateToProps","state","Object","values","auth","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;;AACA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,UAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,kBACG,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,GAAnB,CAAwBC,EAAD,IAAQ;AAC9B,8BACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,uBACGA,EAAE,CAACC,MAAH,KAAc,KAAKN,KAAL,CAAWO,aAAzB,iBACC;AAAK,cAAA,SAAS,EAAC,uBAAf;AAAA,sCACE,QAAC,IAAD;AACE,gBAAA,EAAE,EAAG,iBAAgBF,EAAE,CAACG,EAAG,EAD7B;AAEE,gBAAA,SAAS,EAAC,mBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAOE,QAAC,IAAD;AACE,gBAAA,EAAE,EAAG,mBAAkBH,EAAE,CAACG,EAAG,EAD/B;AAEE,gBAAA,SAAS,EAAC,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAiBE;AAAG,cAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,oBAjBF,eAkBE;AAAK,cAAA,SAAS,EAAC,SAAf;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,EAAE,EAAG,YAAWH,EAAE,CAACG,EAAG;AAA5B;AAAA;AAAA;AAAA;AAAA,sBADF,EAEGH,EAAE,CAACI,KAFN,eAGE;AAAK,gBAAA,SAAS,EAAC,aAAf;AAAA,0BAA8BJ,EAAE,CAACK;AAAjC;AAAA;AAAA;AAAA;AAAA,sBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAlBF;AAAA,aAA2BL,EAAE,CAACG,EAA9B;AAAA;AAAA;AAAA;AAAA,kBADF;AA0BD,SA3BA;AADH;AAAA;AAAA;AAAA;AAAA,cAFF,EAgCG,KAAKR,KAAL,CAAWW,UAAX,iBACC;AAAA,+BACE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAZ;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,cAAT;AAAwB,YAAA,SAAS,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,uBAjCJ;AAAA,oBADF;AA4CD;;AAlDgC;;AAqDnC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLX,IAAAA,OAAO,EAAEY,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACX,OAApB,CADJ;AAELI,IAAAA,aAAa,EAAEO,KAAK,CAACG,IAAN,CAAWX,MAFrB;AAGLK,IAAAA,UAAU,EAAEG,KAAK,CAACG,IAAN,CAAWN;AAHlB,GAAP;AAKD,CAND;;AAOA,MAAMO,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLlB,IAAAA,UAAU,EAAE,MAAMkB,QAAQ,CAACxB,aAAa,EAAd;AADrB,GAAP;AAGD,CAJD;;AAMA,eAAeE,OAAO,CAACgB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CpB,UAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { getStreamList } from \"../../store/operations\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nclass StreamList extends Component {\n  componentDidMount() {\n    this.props.getStreams();\n  }\n\n  render() {\n    return (\n      <>\n        <h2>Streams</h2>\n        <div className=\"ui celled list\">\n          {this.props.streams.map((el) => {\n            return (\n              <div className=\"item\" key={el.id}>\n                {el.userId === this.props.currentUserId && (\n                  <div className=\"right floated content\">\n                    <Link\n                      to={`/streams/edit/${el.id}`}\n                      className=\"ui button primary\"\n                    >\n                      Edit\n                    </Link>\n                    <Link\n                      to={`/streams/delete/${el.id}`}\n                      className=\"ui button negative\"\n                    >\n                      Delete\n                    </Link>\n                  </div>\n                )}\n                <i className=\"large middle aligned icon camera\"></i>\n                <div className=\"content\">\n                  <Link to={`/streams/${el.id}`}></Link>\n                  {el.title}\n                  <div className=\"description\">{el.description}</div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n        {this.props.isSignedIn && (\n          <>\n            <div style={{ textAlign: \"right\" }}>\n              <Link to=\"/streams/new\" className=\"ui button primary\">\n                Create new\n              </Link>\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getStreams: () => dispatch(getStreamList()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StreamList);\n"]},"metadata":{},"sourceType":"module"}